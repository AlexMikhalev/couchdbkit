#! /usr/bin/env python

import optparse as op
import os
import sys

sys.path.insert(0, os.getcwd())


import couchdbkit

def import_app(module):
    parts = module.rsplit(":", 1)
    if len(parts) == 1:
        module, obj = module, "application"
    else:
        module, obj = parts[0], parts[1]
    mod = __import__(module)
    parts = module.split(".")
    for p in parts[1:]:
        mod = getattr(mod, p, None)
        if mod is None:
            raise ImportError("Failed to import: %s" % module)
    app = getattr(mod, obj, None)
    if app is None:
        raise ImportError("Failed to find application object: %r" % obj)
    if not callable(app):
        raise TypeError("Application object must be callable.")
    return app
    
def main():
    parser = op.OptionParser(usage="%prog APP_MODULE")
    opts, args = parser.parse_args()
    
    if len(args) != 1:
        parser.error("No application module specified.")
    
    application = import_app(args[0])
    handler = couchdbkit.WSGIHandler(application)
    handler.run()
    
if __name__ == "__main__":
    main()